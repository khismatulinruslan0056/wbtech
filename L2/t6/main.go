package main

import (
	"fmt"
)

func main() {
	var s = []string{"1", "2", "3"}
	modifySlice(s)
	fmt.Println(s)
	// вывод
	// [3 2 3]
}

func modifySlice(i []string) { //[]string{"1", "2", "3"}, len = 3, cap = 3
	// тк мы изменяем элементы, а не добавляем новые (len = cap), то сейчас мы вносим изменения в базовом массиве
	i[0] = "3" //[]string{"3", "2", "3"}, len = 3, cap = 3
	// добавляем элемент в слайс
	// происходит аллокация базового массива с увеличением длины и емкости
	// емкость увеличивается в 2 раза, длина на 1
	// далее мы на исходный базовый массив никак не влияем
	i = append(i, "4") //[]string{"3", "2", "3", "4"}, len = 4, cap = 6, исходный []string{"3", "2", "3"}, len = 3, cap = 3
	// изменяем элемент увеличенного слайса, исходный базовый массив не меняется
	i[1] = "5" //[]string{"3", "5", "3", "4"}, len = 4, cap = 6, []string{"3", "2", "3"}, len = 3, cap = 3
	// добавляем новый элемент, длина меньше емкости, аллокации нет
	i = append(i, "6") //[]string{"3", "5", "3", "4", "6"}, len = 5, cap = 6, []string{"3", "2", "3"}, len = 3, cap = 3
}

// если мы хотим по результату выполнения функции получить слайс []string{"3", "5", "3", "4", "6"}
// то нужно его возвращать, именно поэтому append возвращает слайс
